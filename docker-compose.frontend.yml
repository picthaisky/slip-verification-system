version: '3.8'

services:
  # Frontend - Angular Application
  frontend:
    build:
      context: ./slip-verification-web
      dockerfile: Dockerfile
    container_name: slip-verification-frontend
    ports:
      - "4200:80"
    environment:
      - API_URL=http://localhost:5000/api/v1
    depends_on:
      - backend
    networks:
      - slip-verification-network
    restart: unless-stopped

  # Backend - .NET API (reference to existing backend)
  backend:
    build:
      context: ./slip-verification-api
      dockerfile: Dockerfile
    container_name: slip-verification-backend
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=SlipVerificationDb;Username=postgres;Password=postgres123
      - Redis__Configuration=redis:6379
      - Jwt__Secret=your-super-secret-jwt-key-change-this-in-production
      - Jwt__Issuer=SlipVerificationAPI
      - Jwt__Audience=SlipVerificationClient
    depends_on:
      - postgres
      - redis
    networks:
      - slip-verification-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: slip-verification-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=SlipVerificationDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - slip-verification-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: slip-verification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - slip-verification-network
    restart: unless-stopped

  # pgAdmin - Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: slip-verification-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@slipverification.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - slip-verification-network
    restart: unless-stopped

  # OCR Microservice - Python FastAPI
  ocr-service:
    build:
      context: ./ocr-service
      dockerfile: Dockerfile
    container_name: slip-verification-ocr
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=False
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - slip-verification-network
    restart: unless-stopped
    volumes:
      - ocr_logs:/app/logs

networks:
  slip-verification-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  ocr_logs:
